---GIT DAY1----
1.Create a project
2.create a GitHub Repository
    *go to github
    *Repositories>Create new Repository>first_git_project
3.Create a first Commit for the first Time
 ONLY       *git init
 EVERY      *git add .
 EVERY      *git commit -m "first commit"
 ONLY       *git branch -M main
 ONLY       *git remote add origin https://github.com/atagurban07/first_git_project.git
 ONLY/EVERY   *git push -u origin main
----Then your code should be pushed to github.Refresh your page to see the code

4.Create a new Second Commit
    *Create a new java class under first_git_package:MySecondClass
    *Create a new commit and push the code to github
        *git add .
        *git commit -m "added my second java class"
        *git push

5.Adding specific files
    *Create 2 java class:MyThirdClass, MyFourthClass
    *Create a commit with only MyFourthClass
        *git add "src/first_git_package/MyFourthClass.java"
        *git commit -m "adding fourth class"
        *git push
6.GIT PULL
    *git pull is used to get the code from github
    *git pull=git fetch+ git merge
    NOTE:if git pull throws error then use:
    git fetch
    git merge
    *Now that we have our local updated,then commit codes and push all together
Note:PULL before PUSH
    *git pull->git add . ->git commit -m "message" -> git push
NOTE: git status => This is our friend.This can be used anytime to see the progress

----------BRANCHING------
git branch -a => show me all branches
git branch test ->create test branch
git checkout test -> switched to test branch
created a code : MySixthClass
create a new commit and push
    git add .
    git commit -m "message"
    git push --set-upstream origin test
then codes will be in the remote test branch
Then in github expert or will us will do:
    Pull Request (PR)(us or expert)
    Then code review(Expert)
    Then code merge(Expert)